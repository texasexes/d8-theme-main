.absolute__item,
.flexbox__item,
.block__item {
  &--layout-box-7 {
    margin-bottom: $component-margin;
    border-width: $component-border-width;
  }

  // &--layout-box-8 {
  //   margin-bottom: $component-margin;
  //   border-width: $component-border-width;
  // }

  &--item-background-1 {
    background-color: $item-background-color-1;
  }

  &--item-background-2 {
    background-color: $item-background-color-2;
  }

  &--item-background-3 {
    background-color: $item-background-color-3;
  }

  &--item-background-4 {
    background-color: $item-background-color-4;
  }

  &--item-background-5 {
    background-color: $item-background-color-5;
  }

  &--item-background-6 {
    background-color: $item-background-color-6;
  }

  &--item-background-7 {
    background-color: $item-background-color-7;
  }

  &--item-background-8 {
    background-color: $item-background-color-8;
  }

  &--item-background-9 {
    background-color: $item-background-color-9;
  }

  &--item-background-10 {
    background-color: $item-background-color-10;
  }

  &--item-box-1 {
    &:first-of-type {
      padding: 0;
    }

    &,
    &:only-of-type {
      padding: 0 $row-padding;
    }
  }

  &--item-box-2 {
    &:first-of-type {
      padding: 0;
    }

    @include breakpoint($break-layout) {
      &,
      &:only-of-type {
        padding-left: $row-padding;
      }
    }
  }

  &--item-box-3 {
    &:first-of-type {
      padding: 0;
    }

    &,
    &:only-of-type {
      padding: $row-padding;
    }
  }

  &--item-box-4 {
    &:first-of-type {
      padding: 0;
    }

    &,
    &:only-of-type {
      padding: 0 $component-padding;
    }
  }

  &--item-box-5 {
    &:first-of-type {
      padding: 0 $component-padding/2 0 0;
    }

    &.flexbox__item--feature-100 {
      @include breakpoint(max-width $medium) {
        padding-right: 0;
        &:not(.flexbox__item--layout-background-1) {
          padding: $component-padding/2 0px;
        }
      }
    }

    & {
      padding: 0 0 0 $component-padding/2;
    }

    &:only-of-type {
      padding: 0 0 0 103px;
    }
  }

// primarily used for stacked cards where the second flexbox item has padding while
// the first does not
  &--item-box-6 {
    &:first-of-type {
      padding: 0;
    }

    &,
    &:only-of-type {
      padding: $component-padding;
    }
  }

  &--item-box-7 {
    &:first-of-type {
      padding: 0;
    }

    &,
    &:only-of-type {
      padding: $component-padding $component-padding $component-padding $row-padding;
    }
  }

  &--item-box-8 {
    &:first-of-type {
      padding: 0 $component-padding;
    }

    &,
    &:only-of-type {
      padding: $list-item-padding 5px;
    }

    @include breakpoint(max-width $break-layout) {
      &:first-of-type {
        padding: 0 $list-item-padding 0 0;
      }
    }
  }

  &--item-box-9 {
    &:first-of-type {
      padding: 0;
    }

    &,
    &:only-of-type {
      padding-right: $component-padding;
    }
  }

  &--item-box-10 {
    &:first-of-type {
      padding: 0 $component-padding;
    }

    &,
    &:only-of-type {
      padding: $list-item-padding;
    }
  }

  &--item-box-11 {
    &:first-of-type {
      padding: 0;
    }

    &,
    &:only-of-type {
      padding: 0 10%;
    }
  }

  &--item-box-12 {
    &:first-of-type {
      padding: 0;
    }

    &,
    &:only-of-type {
      padding: 0 $component-padding 0 80px;
    }
  }

  &--item-box-13 {
    &:first-of-type {
      padding: 0;
    }

    &,
    &:only-of-type {
      padding: 0 $component-padding $component-padding $component-padding;
    }
  }

  &--item-box-14 {
    &:first-of-type {
      padding: 0 $component-padding;
    }

    &,
    &:only-of-type {
      padding: $list-item-padding;
    }

    @include breakpoint(max-width $break-layout) {
      &:first-of-type {
        padding: 0 $list-item-padding 0 0;
      }
    }
  }

  &--item-box-15 {
    @include breakpoint($break-layout) {
      &:first-of-type {
        padding: 0;
      }
    }

    &,
    &:only-of-type {
      padding: $component-padding 0;
    }

    @include breakpoint(max-width $break-layout) {
      &,
      &:only-of-type {
        padding: $component-padding;
      }
    }
  }
}

@include breakpoint(max-width $break-layout) {
  .flexbox__item.flexbox__item--layout-row {
    // padding: 0 $space-one-third;
  }
}
