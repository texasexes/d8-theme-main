{#
/**
 * @file
 * Theme override to display a menu.
 *
 * Available variables:
 * - menu_name: The machine name of the menu.
 * - items: A nested list of menu items. Each menu item contains:
 *   - attributes: HTML attributes for the menu item.
 *   - below: The menu item child items.
 *   - title: The menu link title.
 *   - url: The menu link url, instance of \Drupal\Core\Url
 *   - localized_options: Menu link localized options.
 *   - is_expanded: TRUE if the link has visible children within the current
 *     menu tree.
 *   - is_collapsed: TRUE if the link has children within the current menu tree
 *     that are not currently visible.
 *   - in_active_trail: TRUE if the link is in the active trail.
 *   - is_active: TRUE if the link route matches the current page route
 *   - is_login_link: TRUE if set as attribute in the link plugin found in the
 *     txex_menus module
 */
#}
{% set menu_bem_blockname = menu_bem_blockname|default('missing-menu-name') %}
{% set menu_list_classes_extra = menu_list_classes_extra|default([]) %}
{% set menu_item_classes_extra = menu_item_classes_extra|default([]) %}

{{ attach_library('d8_theme_main/main_menu') }}

{% block content %}

  {% import _self as menus %}

  {#
    We call a macro which calls itself to render the full tree.
    @see http://twig.sensiolabs.org/doc/tags/macro.html
  #}

  {{ menus.menu_links(items, attributes, 0, menu_bem_blockname, menu_list_classes_extra, menu_item_classes_extra, logged_in) }}
  {% macro menu_links(items, attributes, menu_level, menu_bem_blockname, menu_list_classes_extra, menu_item_classes_extra, logged_in) %}
    {% import _self as menus %}
    {% if items %}

      {% set menu_list_classes = [
        menu_bem_blockname,
        menu_bem_blockname ~ '--level-' ~ menu_level
      ]|merge(menu_list_classes_extra) %}

        <ul{{ attributes.addClass(menu_list_classes) }}>

        {% for item in items %}

          {% set menu_item_classes = [
            menu_bem_blockname ~ '__item',
            menu_bem_blockname ~ '__item--level-' ~ menu_level,
            item.below ? (menu_bem_blockname ~ '__item--with-sub'),
            item.in_active_trail ? (menu_bem_blockname ~ '__item--active-trail'),
            (item.in_active_trail and not item.below) ? (menu_bem_blockname ~ '__item--active-trail-last'),
            item.is_expanded ? (menu_bem_blockname ~ '__item--expanded'),
            item.is_collapsed ? (menu_bem_blockname ~ '__item--collapsed'),
            item.is_login_link ? (menu_bem_blockname ~ '__item--login-wrapper')
          ]|merge(menu_item_classes_extra) %}

          <li{{ item.attributes.addClass(menu_item_classes) }}>
            {# checks for an html attribute set in a link plugin in txex_menus module #}
            {% if (item.is_login_link) %}
              {# remove attributes before svg render because they get passed to the svg render erroneously #}
              {% set attributes = attributes.removeClass(menu_list_classes) %}
              {% set my_icon_modifiers = [] %}
              {% if (logged_in) %}
                {% set my_icon_modifiers = my_icon_modifiers|merge({'logged-in' : 'logged-in',}) %}
              {% endif %}
              {% include "@atoms/04-images/icons/_icon.twig" with {
                icon_base_class: 'profile-icon',
                icon_blockname: menu_bem_blockname,
                icon_modifiers: my_icon_modifiers,
                icon_name: 'txex-icon-profile',
              } %}
            {% endif %}
            {{ link(item.title, item.url) }}
            {% if item.below %}

              <div class="{{menu_bem_blockname ~ '__expand-sub'}}">
                {# remove attributes before svg render because they get passed to the svg render erroneously #}
                {% set attributes = attributes.removeClass(menu_list_classes) %}
                {% include "@atoms/04-images/icons/_icon.twig" with {
                  icon_base_class: 'sub-icon',
                  icon_blockname: menu_bem_blockname,
                  icon_name: 'chevron',
                } %}
              </div>

                {% set menu_dropdown_classes = [
                  menu_bem_blockname ~ '__dropdown',
                  menu_bem_blockname ~ '__dropdown--level-' ~ menu_level,
                ] %}

                <div{{ create_attribute().addClass(menu_dropdown_classes) }}>
                  <div class="{{- menu_bem_blockname -}}__dropdown-inner">
                    {{ menus.menu_links(item.below, attributes, menu_level + 1, menu_bem_blockname, menu_list_classes_extra, menu_item_classes_extra, logged_in) }}
                  </div>
                </div>

            {% endif %}
          </li>
        {% endfor %}
        </ul>

    {% endif %}
  {% endmacro %}
{% endblock content %}
