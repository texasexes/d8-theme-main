{"version":3,"sources":["02-molecules/menus/main-menu/main-menu.js"],"names":["$","Drupal","waitForFinalEvent","timers","callback","ms","uniqueId","clearTimeout","setTimeout","dom","document","win","window","body","mainMenuToggle","mainMenuToggleOpen","mainMenu","mainMenuSub","mainMenuExpandSub","toolbar","winH","height","winW","width","bodyPaddingTop","maxHeight","mainMenuHeight","outerHeight","mainMenuSubOpen","mainMenuVisible","mainMenuActive","noscroll","mainMenuBg","removeMainMenuBg","remove","mainMenuBgToggle","toggleClass","length","css","top","append","click","e","preventDefault","subNavPosition","console","log","next","calculateBodyPaddingTop","parseInt","calculateMenuHeights","ready","resize","removeClass","jQuery"],"mappings":"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","file":"scripts-styleguide.js","sourcesContent":["(function ($, Drupal) {\n\n  // WaitForFinalEvent Function\n  // This function allow us to only perform re-calculations AFTER an event has copmleted.\n  // Below, we'll use it to recalculate values only after the window has been resized, instead of recalculating every pixel change.\n  // Usage:\n  // $(window).resize(function () {\n  //   waitForFinalEvent(function(){\n  //     alert('Resize...');\n  //     //...\n  //   }, 500, \"some unique string\");\n  // });\n  const waitForFinalEvent = (function () {\n    const timers = {};\n    return function (callback, ms, uniqueId) {\n      if (!uniqueId) {\n        uniqueId = \"Don't call this twice without a uniqueId\";\n      }\n      if (timers[uniqueId]) {\n        clearTimeout (timers[uniqueId]);\n      }\n      timers[uniqueId] = setTimeout(callback, ms);\n    };\n  })();\n\n  // Element selectors\n  const dom = $(document);\n  const win = $(window);\n  const body = $('body');\n  const mainMenuToggle = $('.main-menu-toggle');\n  const mainMenuToggleOpen = $('.main-menu-toggle--open');\n  const mainMenu = $('.main-nav');\n  const mainMenuSub = $('.main-menu--level-1');\n  const mainMenuExpandSub = $('.main-menu__expand-sub');\n  const toolbar = $('.toolbar-bar');\n\n  // Calculated values\n  let winH = win.height();\n  let winW = win.width();\n  let bodyPaddingTop = '0';\n  let maxHeight = '100vh';\n  let mainMenuHeight = mainMenu.outerHeight();\n\n  // Classes\n  const mainMenuSubOpen = 'main-menu__expand-sub--open';\n  const mainMenuVisible = 'js-visible';\n  const mainMenuActive = 'js-menu-active';\n  const noscroll = 'noscroll';\n\n  // New elements\n  let mainMenuBg = '';\n\n  // Remove mobile nav background\n  function removeMainMenuBg() {\n    mainMenuBg.remove();\n    mainMenuBg = '';\n  }\n\n  // Show/Hide overlay\n  function mainMenuBgToggle() {\n    // Prevent the background from scrolling when the mobile menu is active\n    body.toggleClass(noscroll);\n\n    // Display main menu\n    mainMenu.toggleClass(mainMenuVisible);\n\n    // Remove the overlay if it exists\n    if (mainMenuBg.length) {\n      removeMainMenuBg();\n    }\n\n    // Add overlay if needed\n    else {\n      mainMenuBg = $('<span class=\"js-main-menu-close\" />');\n      mainMenuBg.css({top: bodyPaddingTop});\n      mainMenuToggleOpen.append(mainMenuBg);\n    }\n  };\n\n  // Main Menu\n  mainMenuToggle.click(function (e) {\n    e.preventDefault();\n    mainMenuBgToggle();\n  });\n\n  // Calculate the subnav position for the desktop view\n  function subNavPosition() {\n    mainMenuHeight = mainMenu.outerHeight();\n    mainMenuSub.css({'top': mainMenuHeight})\n    console.log(mainMenuHeight);\n  };\n\n  subNavPosition();\n\n  // Display Sub-nav\n  mainMenuExpandSub.click(function (e) {\n    e.preventDefault();\n    $(this).toggleClass(mainMenuSubOpen);\n    $(this).next('ul').toggleClass(mainMenuVisible);\n  });\n\n  // Calculate body padding top (to accommodate the admin menu)\n  function calculateBodyPaddingTop() {\n    bodyPaddingTop = parseInt(body.css('padding-top'));\n  };\n\n  // Set the height and position of the main-nav\n  function calculateMenuHeights() {\n    dom.ready(function() {\n      winH = win.height();\n      calculateBodyPaddingTop();\n      maxHeight = winH - bodyPaddingTop;\n      mainMenu.css({'top': bodyPaddingTop, 'max-height': maxHeight});\n    });\n  };\n\n  calculateMenuHeights();\n\n  // Update everything when the window is resized\n  win.resize(function () {\n    waitForFinalEvent(function(){\n      winW = win.width();\n      // If desktop width remove all mobile menu stuff\n      if (winW > 767) {\n        // Remove background overlay\n        if (mainMenuBg.length) {\n          removeMainMenuBg();\n        }\n        // Remove noscroll class from body\n        body.removeClass(noscroll);\n        // Hide mobile menu\n        mainMenu.removeClass(mainMenuVisible);\n      }\n\n      calculateMenuHeights();\n      subNavPosition();\n    }, 100, \"Main menu - window resize\");\n  });\n\n\n}(jQuery, Drupal));\n"]}