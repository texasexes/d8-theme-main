{"version":3,"sources":["02-molecules/accordion/accordion.js"],"names":["parseInt","outerHeight","ready","clearTimeout","setTimeout","document","window","outerWidth","Math","max","apply","map","get","css","top","addClass","children","first","removeClass","click","preventDefault","parent","siblings","hasClass","toggleClass","offset","scrollTop","animate","resize","jQuery","Drupal"],"mappings":"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","file":"accordion.js","sourcesContent":["(function ($, Drupal) {\n\n  // WaitForFinalEvent Function\n  // This function allow us to only perform re-calculations AFTER an event has copmleted.\n  // Below, we'll use it to recalculate values only after the window has been resized, instead of recalculating every pixel change.\n  // Usage:\n  // $(window).resize(function () {\n  //   waitForFinalEvent(function(){\n  //     alert('Resize...');\n  //     //...\n  //   }, 500, \"some unique string\");\n  // });\n  const waitForFinalEvent = (function () {\n    const timers = {};\n    return function (callback, ms, uniqueId) {\n      if (!uniqueId) {\n        uniqueId = \"Don't call this twice without a uniqueId\";\n      }\n      if (timers[uniqueId]) {\n        clearTimeout (timers[uniqueId]);\n      }\n      timers[uniqueId] = setTimeout(callback, ms);\n    };\n  })();\n\n  const dom = $(document);\n  const win = $(window);\n  const accordionTabsItem = $('.tabs .accordion__item');\n  const accordionTabsItemContent = $('.tabs .accordion__item .accordion__content');\n  const accordionTabsItemHeading = $('.tabs .accordion__item .accordion__heading');\n  const accordionItem = $('.accordion__item');\n  const accordionHeading = $('.accordion__heading');\n  const accordionContent = $('.accordion__content');\n  const accordionIcon = $('.accordion__expand-icon');\n  const activeClass = 'js-active';\n  const hiddenClass = 'js-hidden';\n  const openClass = 'js-open';\n  const closedClass = 'js-closed';\n  const breakpoint = 900;\n\n  let toolbarAdministration = null;\n  let toolbarTrayHorizontal = null;\n  let toolbarOffset = null;\n  let headerWrapperScrollUp = null;\n  let headerWrapper = null;\n  let headerWrapperOffset = null;\n  let additionalOffset = 0;\n  let bodyFixedAdminBar = null;\n  let bodyFixedAdminHorizontalTray = null;\n  let bodyFixedAdminBarHeight = 0;\n\n  let winW = parseInt(win.outerWidth(), 10);\n\n  let maxHeight = function(elems){\n    return Math.max.apply(null, elems.map(function ()\n    {\n        return $(this).outerHeight();\n    }).get());\n  }\n\n  // Calculate body padding top (to accommodate the admin menu)\n  function calculateBodyFixedAdminBarHeight() {\n    bodyFixedAdminBar = $('body.toolbar-fixed #toolbar-bar');\n    bodyFixedAdminHorizontalTray = $('body.toolbar-fixed.toolbar-tray-open.toolbar-horizontal #toolbar-item-administration-tray');\n    bodyFixedAdminBarHeight = (parseInt(bodyFixedAdminBar.outerHeight()) || 0) + (parseInt(bodyFixedAdminHorizontalTray.outerHeight()) || 0);\n  };\n\n  function calculateHeights() {\n    dom.ready(function() {\n      // Handle fixed Drupal admin bar.\n     calculateBodyFixedAdminBarHeight();\n\n    });\n  };\n\n  calculateHeights();\n\n  let maxTabsHeadingHeight = maxHeight(accordionTabsItemHeading);\n  let maxTabsContentHeight = maxHeight(accordionTabsItemContent);\n  let maxTabHeight = maxTabsHeadingHeight + maxTabsContentHeight;\n\n  // Tabs are allowed to be active.\n  if (winW > breakpoint) {\n    accordionTabsItem.outerHeight(maxTabHeight);\n    // Add extra pixel to make header overlap content and override it's border.\n    accordionTabsItemHeading.outerHeight((parseInt(maxTabsHeadingHeight) + 1));\n    accordionTabsItemContent.css({ top: maxTabsHeadingHeight });\n  }\n\n  let maxHeadingHeight = maxHeight(accordionHeading);\n  let maxIconHeight = maxHeight(accordionIcon);\n\n  let accordionTopOffset = (parseInt(maxHeadingHeight) / 2) - (parseInt(maxIconHeight) / 2);\n  accordionIcon.css({ top: accordionTopOffset });\n\n  // Hide content via js so that if js is disabled, all of the content is visible\n  accordionItem.addClass(closedClass);\n  accordionItem.children().addClass(closedClass);\n\n  // Initialize tabs if needed\n  accordionTabsItem.first().addClass(openClass).removeClass(closedClass);\n  accordionTabsItem.first().children().addClass(openClass).removeClass(closedClass);\n\n  accordionHeading.click(function (e) {\n    e.preventDefault();\n\n    // Close all other elements but self.\n    $(this).parent().siblings().addClass(closedClass).removeClass(openClass);\n    $(this).parent().siblings().children().addClass(closedClass).removeClass(openClass);\n\n    // When accordion uses tabs display and window is wider than breakpoint.\n    // Keep in mind that tabs styles are only applied when wider than breakpoint\n    // in scss files.\n    if ($(this).parent().parent().hasClass('tabs-child') && winW > breakpoint) {\n      // Click does not toggle, just sets to open.\n      $(this).parent().addClass(openClass).removeClass(closedClass);\n      $(this).parent().children().addClass(openClass).removeClass(closedClass);\n      // This is default accordion behavior (no tabs display).\n    } else {\n        // Click toggles element open/closed.\n        $(this).parent().toggleClass(openClass).toggleClass(closedClass);\n        $(this).parent().children().toggleClass(openClass).toggleClass(closedClass);\n\n        if (winW <= breakpoint) {\n          // Handle scroll behavior offset in relation to scroll-hide mobile menu bar.\n          headerWrapper = $('.header-wrapper');\n          headerWrapperScrollUp = $('.header-wrapper .scrollUp');\n          headerWrapperOffset = (parseInt(headerWrapper.outerHeight()) || 0) - (parseInt(headerWrapperScrollUp.outerHeight()) || 0);\n\n          if ( $(this).offset().top < (win.scrollTop() + headerWrapperOffset) ) {\n            additionalOffset = headerWrapperOffset;\n          }\n        }\n\n        calculateBodyFixedAdminBarHeight();\n        additionalOffset += bodyFixedAdminBarHeight;\n\n\n        // Scroll behavior when an accordion item is clicked.\n        $('html,body').animate({\n          scrollTop: $(this).offset().top - additionalOffset\n        }, 500);\n        // Re-Initialize scroll additional offset for next click.\n        additionalOffset = 0;\n    }\n\n  });\n\n  // Update everything when the window is resized\n  win.resize(function () {\n    waitForFinalEvent(function(){\n    winW = parseInt(win.outerWidth(), 10);\n    // Clear manually set css and height\n    accordionTabsItem.outerHeight('');\n    accordionTabsItemHeading.outerHeight('');\n    accordionTabsItemContent.css({ top: '' });\n\n    calculateHeights();\n\n    // Always position icon\n    accordionIcon.css({ top: (parseInt(maxTabsHeadingHeight) / 2) });\n\n    // Tabs are allowed to be active.\n    if (winW > breakpoint) {\n      maxTabsHeadingHeight = maxHeight(accordionTabsItemHeading);\n      maxTabsContentHeight = maxHeight(accordionTabsItemContent);\n      maxTabHeight = maxTabsHeadingHeight + maxTabsContentHeight;\n\n      accordionTabsItem.outerHeight(maxTabHeight);\n      // Add extra pixel to make header overlap content and override it's border.\n      accordionTabsItemHeading.outerHeight((parseInt(maxTabsHeadingHeight) + 1));\n      accordionTabsItemContent.css({ top: maxTabsHeadingHeight });\n    }\n\n    }, 100, \"Accordion - window resize\");\n  });\n\n}(jQuery, Drupal));\n"]}