{"version":3,"sources":["02-molecules/accordion/accordion.js"],"names":["clearTimeout","setTimeout","window","parseInt","width","Math","max","apply","map","outerHeight","get","css","top","addClass","children","first","removeClass","click","preventDefault","parent","siblings","resize","height","jQuery","Drupal"],"mappings":"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","file":"accordion.js","sourcesContent":["(function ($, Drupal) {\n\n  // WaitForFinalEvent Function\n  // This function allow us to only perform re-calculations AFTER an event has copmleted.\n  // Below, we'll use it to recalculate values only after the window has been resized, instead of recalculating every pixel change.\n  // Usage:\n  // $(window).resize(function () {\n  //   waitForFinalEvent(function(){\n  //     alert('Resize...');\n  //     //...\n  //   }, 500, \"some unique string\");\n  // });\n  const waitForFinalEvent = (function () {\n    const timers = {};\n    return function (callback, ms, uniqueId) {\n      if (!uniqueId) {\n        uniqueId = \"Don't call this twice without a uniqueId\";\n      }\n      if (timers[uniqueId]) {\n        clearTimeout (timers[uniqueId]);\n      }\n      timers[uniqueId] = setTimeout(callback, ms);\n    };\n  })();\n\n  const accordionTabsItem = $('.tabs .accordion__item');\n  const accordionTabsItemContent = $('.tabs .accordion__item .accordion__content');\n  const accordionTabsItemHeading = $('.tabs .accordion__item .accordion__heading');\n  const accordionItem = $('.accordion__item');\n  const accordionHeading = $('.accordion__heading');\n  const accordionContent = $('.accordion__content');\n  const accordionIcon = $('.accordion__expand-icon');\n  const activeClass = 'js-active';\n  const hiddenClass = 'js-hidden';\n  const openClass = 'js-open';\n  const closedClass = 'js-closed';\n  const win = $(window);\n\n  let winW = parseInt(win.width(), 10);\n\n  let maxHeight = function(elems){\n    return Math.max.apply(null, elems.map(function ()\n    {\n        return $(this).outerHeight();\n    }).get());\n  }\n\n  let maxTabsHeadingHeight = maxHeight(accordionTabsItemHeading);\n  let maxTabsContentHeight = maxHeight(accordionTabsItemContent);\n  let maxTabHeight = maxTabsHeadingHeight + maxTabsContentHeight;\n\n  accordionTabsItem.outerHeight(maxTabHeight);\n  // Add extra pixel to make header overlap content and override it's border.\n  accordionTabsItemHeading.outerHeight((parseInt(maxTabsHeadingHeight) + 1));\n  accordionTabsItemContent.css({ top: maxTabsHeadingHeight });\n\n  let maxHeadingHeight = maxHeight(accordionHeading);\n  let maxIconHeight = maxHeight(accordionIcon);\n\n  let accordionTopOffset = (parseInt(maxHeadingHeight) / 2) - (parseInt(maxIconHeight) / 2);\n  accordionIcon.css({ top: accordionTopOffset });\n\n  // Hide content via js so that if js is disabled, all of the content is visible\n  accordionItem.addClass(closedClass);\n  accordionItem.children().addClass(closedClass);\n\n  // Initialize tabs if needed\n  accordionTabsItem.first().addClass(openClass).removeClass(closedClass);\n  accordionTabsItem.first().children().addClass(openClass).removeClass(closedClass);\n\n  accordionHeading.click(function (e) {\n    e.preventDefault();\n    $(this).parent().addClass(openClass).removeClass(closedClass);\n    $(this).parent().children().addClass(openClass).removeClass(closedClass);\n\n    $(this).parent().siblings().addClass(closedClass).removeClass(openClass);\n    $(this).parent().siblings().children().addClass(closedClass).removeClass(openClass);\n  });\n\n  // Update everything when the window is resized\n  win.resize(function () {\n    waitForFinalEvent(function(){\n    winW = parseInt(win.width(), 10);\n    // If desktop width set height\n    // Clear manually set css and height\n    accordionTabsItem.height('');\n    accordionTabsItemContent.css({ top: '' });\n    accordionTabsItemHeading.height('');\n\n    // Always position icon\n    accordionIcon.css({ top: (parseInt(maxTabsHeadingHeight) / 2) });\n\n    if (winW > 900) {\n      maxTabsHeadingHeight = maxHeight(accordionTabsItemHeading);\n      maxTabsContentHeight = maxHeight(accordionTabsItemContent);\n      maxTabHeight = maxTabsHeadingHeight + maxTabsContentHeight;\n\n      accordionTabsItem.outerHeight(maxTabHeight);\n      // Add extra pixel to make header overlap content and override it's border.\n      accordionTabsItemHeading.outerHeight((parseInt(maxTabsHeadingHeight) + 1));\n      accordionTabsItemContent.css({ top: maxTabsHeadingHeight });\n    }\n\n    }, 100, \"Accordion - window resize\");\n  });\n\n}(jQuery, Drupal));\n"]}